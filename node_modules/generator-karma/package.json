{
  "name": "generator-karma",
  "version": "0.4.1",
  "description": "Yeoman generator for Karma",
  "keywords": [
    "yeoman-generator",
    "scaffold",
    "test",
    "runner"
  ],
  "homepage": "https://github.com/yeoman/generator-karma",
  "bugs": {
    "url": "https://github.com/yeoman/generator-karma/issues"
  },
  "author": {
    "name": "Chrome Developer Relations"
  },
  "main": "app/index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/yeoman/generator-karma.git"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "dependencies": {
    "yeoman-generator": "~0.12.0"
  },
  "devDependencies": {
    "mocha": "~1.12.0"
  },
  "files": [
    "lib/**/*"
  ],
  "engines": {
    "node": ">=0.8.0"
  },
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "readme": "# Karma generator [![Build Status](https://secure.travis-ci.org/yeoman/generator-karma.png?branch=master)](http://travis-ci.org/yeoman/generator-karma)\n\nMaintainer: [Brian Ford](https://github.com/btford)\n\nSee the [Karma documentation](http://karma-runner.github.com/) for more info.\n\n\n## Why Karma?\n\nKarma runs the tests in the browser, but reports them in the CLI. This greatly improves your workflow by giving you constant, accurate feedback on the status of your tests.\n\nPhantomJS is a great option too, but it has the one drawback that it won't expose browser inconsistencies.\n\n\n## Usage\n\nInstall it globally `npm install -g generator-karma`.\n\nRunning `yo karma` will generate two files for your project: `karma.conf.js` and `karma-e2e.conf.js`. It will then install the npm dependencies.\n\nNote that you'll need to install the `grunt-karma` plugin for Grunt and update your `Gruntfile.js`. If you're using Karma through the [AngularJS](https://github.com/yeoman/generator-angular) generator, all of the configuration is done for you.\n\n\n## Options\n\n* `--skip-install`\n\n  Skips the automatic execution of `bower` and `npm` after scaffolding has finished.\n\n* `--test-framework=[framework]`\n\n  Defaults to `mocha`. Can be switched for another supported testing framework like `jasmine` or `qunit`.\n\n* `--coffee`\n\n  Enable support for tests written in CoffeeScript.\n\n* `--travis`\n\n  Enable [Travis CI](https://travis-ci.org/) config generation.\n  \n  \n## Configuration\n\nKarma can be configured by editing `karma.conf.js`. See the documentation page on the [config file](http://karma-runner.github.com/0.8/config/configuration-file.html) for an exhaustive list of options.\n\n\n## Contribute\n\nSee the [contributing docs](https://github.com/yeoman/yeoman/blob/master/contributing.md)\n\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php)\n",
  "readmeFilename": "readme.md",
  "_id": "generator-karma@0.4.1",
  "dist": {
    "shasum": "ed01f16d2e0b003fd090ac24bc185e1a36634c05"
  },
  "_from": "generator-karma@~0.4.0",
  "_resolved": "https://registry.npmjs.org/generator-karma/-/generator-karma-0.4.1.tgz"
}
