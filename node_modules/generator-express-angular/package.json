{
  "name": "generator-express-angular",
  "version": "0.2.7",
  "description": "Yeoman generator for AngularJS + Express",
  "keywords": [
    "yeoman-generator",
    "scaffold",
    "framework",
    "component",
    "front-end",
    "app"
  ],
  "homepage": "https://github.com/Grievoushead/generator-express-angular",
  "bugs": {
    "url": "https://github.com/Grievoushead/generator-express-angular/issues"
  },
  "author": {
    "name": "Grievoushead"
  },
  "main": "app/index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/Grievoushead/generator-express-angular.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "yeoman-generator": "~0.12.0"
  },
  "peerDependencies": {
    "generator-karma": "~0.4.0",
    "yo": ">=1.0.0-rc.1.1"
  },
  "devDependencies": {
    "mocha": "~1.12.0",
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-conventional-changelog": "~1.0.0",
    "marked": "~0.2.8",
    "semver": "~2.0.0",
    "grunt-release": "~0.3.3"
  },
  "engines": {
    "node": ">=0.8.0",
    "npm": ">=1.2.10"
  },
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "readme": "generator-express-angular\r\n=========================\r\n\r\nyeoman angular generator with express\r\n\r\n## Usage\r\n\r\nInstall `generator-express-angular`:\r\n```\r\nnpm install -g generator-express-angular\r\n```\r\n\r\nMake a new directory, and `cd` into it:\r\n```\r\nmkdir my-new-project && cd $_\r\n```\r\n\r\nRun `yo express-angular`, optionally passing an app name:\r\n```\r\nyo express-angular [app-name]\r\n```\r\n\r\n## Generators\r\n\r\nAvailable generators:\r\n\r\n* [express-angular](#app) (aka [express-angular:app](#app))\r\n* [express-angular:controller](#controller)\r\n* [express-angular:directive](#directive)\r\n* [express-angular:filter](#filter)\r\n* [express-angular:route](#route)\r\n* [express-angular:service](#service)\r\n* [express-angular:view](#view)\r\n\r\n**Note: Generators are to be run from the root directory of your app.**\r\n\r\n### App\r\nSets up a new AngularJS app, generating all the boilerplate you need to get started. The app generator also optionally installs Twitter Bootstrap and additional AngularJS modules, such as angular-resource.\r\n\r\nExample:\r\n```bash\r\nyo express-angular\r\n```\r\n\r\n### Route\r\nGenerates a controller and view, and configures a route in `app/scripts/app.js` connecting them.\r\n\r\nExample:\r\n```bash\r\nyo express-angular:route myroute\r\n```\r\n\r\nProduces `app/scripts/controllers/myroute.js`:\r\n```javascript\r\nangular.module('myMod').controller('MyrouteCtrl', function ($scope) {\r\n  // ...\r\n});\r\n```\r\n\r\nProduces `app/views/myroute.html`:\r\n```html\r\n<p>This is the myroute view</p>\r\n```\r\n\r\n### Controller\r\nGenerates a controller in `app/scripts/controllers`.\r\n\r\nExample:\r\n```bash\r\nyo express-angular:controller user\r\n```\r\n\r\nProduces `app/scripts/controllers/user.js`:\r\n```javascript\r\nangular.module('myMod').controller('UserCtrl', function ($scope) {\r\n  // ...\r\n});\r\n```\r\n### Directive\r\nGenerates a directive in `app/scripts/directives`.\r\n\r\nExample:\r\n```bash\r\nyo express-angular:directive myDirective\r\n```\r\n\r\nProduces `app/scripts/directives/myDirective.js`:\r\n```javascript\r\nangular.module('myMod').directive('myDirective', function () {\r\n  return {\r\n    template: '<div></div>',\r\n    restrict: 'E',\r\n    link: function postLink(scope, element, attrs) {\r\n      element.text('this is the myDirective directive');\r\n    }\r\n  };\r\n});\r\n```\r\n\r\n### Filter\r\nGenerates a filter in `app/scripts/filters`.\r\n\r\nExample:\r\n```bash\r\nyo express-angular:filter myFilter\r\n```\r\n\r\nProduces `app/scripts/filters/myFilter.js`:\r\n```javascript\r\nangular.module('myMod').filter('myFilter', function () {\r\n  return function (input) {\r\n    return 'myFilter filter:' + input;\r\n  };\r\n});\r\n```\r\n\r\n### View\r\nGenerates an HTML view file in `app/views`.\r\n\r\nExample:\r\n```bash\r\nyo express-angular:view user\r\n```\r\n\r\nProduces `app/views/user.html`:\r\n```html\r\n<p>This is the user view</p>\r\n```\r\n\r\n### Service\r\nGenerates an AngularJS service.\r\n\r\nExample:\r\n```bash\r\nyo express-angular:service myService\r\n```\r\n\r\nProduces `app/scripts/services/myService.js`:\r\n```javascript\r\nangular.module('myMod').factory('myService', function () {\r\n  // ...\r\n});\r\n```\r\n\r\n#### Options\r\nThere are options for each of the methods for registering services. For more on using these services, see the [module API AngularJS documentation](http://docs.angularjs.org/api/angular.Module).\r\n\r\n##### Factory\r\nInvoked with `--factory`\r\n\r\nThis is the default method when creating a service. Running `yo express-angular:service myService --factory` is the same as running `yo express-angular:service myService`\r\n\r\n##### Service\r\nInvoked with `--service`\r\n\r\n##### Value\r\nInvoked with `--value`\r\n\r\n##### Constant\r\nInvoked with `--constant`\r\n\r\n## Options\r\nIn general, these options can be applied to any generator, though they only affect generators that produce scripts.\r\n\r\n### CoffeeScript\r\nFor generators that output scripts, the `--coffee` option will output CoffeeScript instead of JavaScript.\r\n\r\nFor example:\r\n```bash\r\nyo express-angular:controller user --coffee\r\n```\r\n\r\nProduces `app/scripts/controller/user.coffee`:\r\n```coffeescript\r\nangular.module('myMod')\r\n  .controller 'UserCtrl', ($scope) ->\r\n```\r\n\r\nA project can mix CoffeScript and JavaScript files.\r\n\r\n### Minification Safe\r\nBy default, generators produce unannotated code. Without annotations, AngularJS's DI system will break when minified. Typically, these annotations the make minification safe are added automatically at build-time, after application files are concatenated, but before they are minified. By providing the `--minsafe` option, the code generated will out-of-the-box be ready for minification. The trade-off is between amount of boilerplate, and build process complexity.\r\n\r\n#### Example\r\n```bash\r\nyo express-angular:controller user --minsafe\r\n```\r\n\r\nProduces `app/controller/user.js`:\r\n```javascript\r\nangular.module('myMod').controller('UserCtrl', ['$scope', function ($scope) {\r\n  // ...\r\n}]);\r\n```\r\n\r\n#### Background\r\nUnannotated:\r\n```javascript\r\nangular.module('myMod').controller('MyCtrl', function ($scope, $http, myService) {\r\n  // ...\r\n});\r\n```\r\n\r\nAnnotated:\r\n```javascript\r\nangular.module('myMod').controller('MyCtrl',\r\n  ['$scope', '$http', 'myService', function ($scope, $http, myService) {\r\n\r\n    // ...\r\n  }]);\r\n```\r\n\r\n\r\n",
  "readmeFilename": "readme.md",
  "_id": "generator-express-angular@0.2.7",
  "dist": {
    "shasum": "829ba08686241cd2465bc2ff3d66371216a16c0e"
  },
  "_from": "generator-express-angular@*",
  "_resolved": "https://registry.npmjs.org/generator-express-angular/-/generator-express-angular-0.2.7.tgz"
}
